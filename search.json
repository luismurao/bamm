[{"path":[]},{"path":"/articles/bam.html","id":"convert-niche-models-to-sparse-matrices","dir":"Articles","previous_headings":"A functions","what":"Convert niche models to sparse matrices","title":"bamm","text":"package uses sparse matrices represent objects allows optimize computers memory make important speed ups computation times eliminating operations zero elements. basic function package model2sparse converts raster model setA class slots object ","code":"model_path <- system.file(\"extdata/Lepus_californicus_cont.tif\",                           package = \"bamm\") model <- raster::raster(model_path)  # binary model model_bin <- model > 0.7 sparse_mod <- bamm::model2sparse(model = model_bin) sparse_mod #> Set A of the BAM digram it contains 8 slots  #>  #> @niche_model: a niche model: #>  #> class      : RasterLayer  #> dimensions : 91, 159, 14469  (nrow, ncol, ncell) #> resolution : 0.2, 0.2  (x, y) #> extent     : -118.4042, -86.60417, 14.51846, 32.71846  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #> source     : memory #> names      : layer  #> values     : 0, 1  (min, max) #>  #> @suit_threshold: Threshold value used to binarize model@cellIDs: ids of the cells that have values (4281 pixels)  #>  #> @suit_values: Suitability values of the continuous model #>  #> @sparse_model: A sparse square matrix of  4281 x 4281 entries  #>  #> @coordinates: Pixel centroid coordinates of the model"},{"path":[]},{"path":"/articles/bam.html","id":"connectivity-matrix","dir":"Articles","previous_headings":"M functions","what":"Connectivity matrix","title":"bamm","text":"function estimate connectivity pixels given raster adj_mat, (generally M area can matrix); uses sparse adjacency matrices. map connectivity matrix adj_mod Fig. 1 Connectivity map adj_mod object. green color means connected.","code":"# Adjacency matrix from a niche model   adj_mod <- adj_mat(sparse_mod,ngbs=1,eigen_sys = T) adj_mod #> Set M of the BAM digram it contains 7 slots  #>  #> @coordinates: A matrix with longitude and latitude values of each cell of the raster area #>  #>              x        y #> [1,] -115.9042 32.61846 #> [2,] -115.7042 32.61846 #> [3,] -115.5042 32.61846 #> [4,] -115.3042 32.61846 #> [5,] -115.1042 32.61846 #> [6,] -114.9042 32.61846 #> @eigen_val: Eigen values of the connectivity matrix M #>  #> [1] 7.975459 #> @eigen_vec: Eigen vector of the connectivity matrix M #>  #>               [,1] #> [1,] -8.640622e-11 #> [2,] -1.555028e-10 #> [3,] -2.564191e-10 #> [4,] -4.169028e-10 #> [5,] -6.556496e-10 #> [6,] -8.733471e-10 model_eig <- model model_eig[sparse_mod@cellIDs] <- abs(adj_mod@eigen_vec) raster::plot(model_eig)"},{"path":"/articles/bam.html","id":"am-objects","dir":"Articles","previous_headings":"","what":"AM objects","title":"bamm","text":"objects combine SetA SetM .","code":""},{"path":"/articles/bam.html","id":"connectivity-suitability-diagram","dir":"Articles","previous_headings":"AM objects","what":"Connectivity Suitability diagram","title":"bamm","text":"Estimates connectivity suitability dispersal diagram. shows number geographic clusters function dispersal suitability. function returns following slots Lets see geographic clusters function suitability dispersal Figure 2. interative map showing geographic clusters species can travel two steps per unit time Figure 3. raster map showing geographic clusters species can travel two steps per unit time","code":"clustersin <- bamm::bam_clusters(model=sparse_mod,                                 ngbs=1,plot_model=FALSE) clustersin #> Object of class csd it contains 3 slots:  #>  #> @connections: Geographic clusters data.frame  #>  #>           x        y clusterID cluster_size #> 1 -116.3042 32.41846         1           37 #> 2 -116.7042 32.21846         1           37 #> 3 -116.5042 32.21846         1           37 #> 4 -116.3042 32.21846         1           37 #> @interactive_map: A leaflet map showing the geographic clusters #>  #> @raster_map: A raster map of the clusters clustersin@interactive_map raster::plot(clustersin@raster_map)"},{"path":"/articles/bam.html","id":"the-csd-diagram","dir":"Articles","previous_headings":"AM objects","what":"The CSD diagram","title":"bamm","text":"CSD diagram simple useful tool estimate number dispersal steps species needs travel per unit time order occupy potential area distribution. example approximate number dispersal steps archive suitable patches 30. Figure 4. Connectivity Sutitability Dispersal plot (CSD plot). mean number connected cells (MNCC) showed legend.","code":"csd_plot <- bamm::csd_estimate(sparse_mod,                               dispersal_steps=c(2,4,8,16,32,40)) #>    |                                                                               |                                                                      |   0%   |                                                                               |============                                                          |  17%   |                                                                               |=======================                                               |  33%   |                                                                               |===================================                                   |  50%   |                                                                               |===============================================                       |  67%   |                                                                               |==========================================================            |  83%   |                                                                               |======================================================================| 100%"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Luis Osorio-Olvera. Author, maintainer. Jorge Soberón. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Osorio-Olvera L, Soberón J (2022). bamm: Species Distribution Models Light BAM Theory. R package version 0.4.3, https://luismurao.github.io/bamm/.","code":"@Manual{,   title = {bamm: Species Distribution Models in the Light of the BAM Theory},   author = {Luis Osorio-Olvera and Jorge Soberón},   year = {2022},   note = {R package version 0.4.3},   url = {https://luismurao.github.io/bamm/}, }"},{"path":"/index.html","id":"bamm-","dir":"","previous_headings":"","what":"Species Distribution Models in the Light of the BAM Theory","title":"Species Distribution Models in the Light of the BAM Theory","text":"Authors: Luis Osorio-Olvera & Jorge Soberon","code":""},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Species Distribution Models in the Light of the BAM Theory","text":"bamm package R package designed estimate dynamic models species distributions using concepts BAM scheme. allows operate large matrices (tens millions cells) regarding element BAM, example, adjacency matrix (connectivity matrix), niche suitability matrices. dynamic model behind package cellular automata  main functions package : model2sparse: basic function package, converts binary niche model (raster format) sparse matrix model (object class setA). adj_mat: function returns sparse representation adjacency matrix given raster (generally M area can area) given movement hypothesis. user can ask function return eigen-analysis matrix. bam_clusters: function estimate connectivity suitable areas given adjacency matrix. returns three objects: ) dynamic map (open-street map) connected areas clusters; b) data.frame coordinates geographic cluster membership; c) raster object cluster IDs. csd_estimate:function used estimate CSD-plot. gives idea dispersal distance species needs travel fill potential area distribution. occs2sparse: Converts occurrence data sparse matrix object. object used declare initial conditions modeling invasion dynamics species. sdm_sim: Simulate single species dispersal dynamics using cellular automaton area distribution.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Species Distribution Models in the Light of the BAM Theory","text":"","code":"if (!require('devtools')) install.packages('devtools') devtools::install_github('luismurao/bamm') # If you want to build vignette, install pandoc before and then devtools::install_github('luismurao/bamm',build_vignettes=TRUE)"},{"path":"/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Species Distribution Models in the Light of the BAM Theory","text":"grateful many colleagues University Kansas Niche Modeling Group many vivacious useful discussions topics paper. LOO acknowledges partially supported Consejo Nacional de Ciencia y Tecnología (CONACyT; postdoctoral fellowship number 740751; CVU: 368747). LOO JS acknowledges Blitzi Soberon moral support.","code":""},{"path":"/reference/adj_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"adj_mat: Function to compute the adjacency matrix of an area. — adj_mat","title":"adj_mat: Function to compute the adjacency matrix of an area. — adj_mat","text":"Creates adjacency matrix area interest. accessible area (M) species geographic region interest.","code":""},{"path":"/reference/adj_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adj_mat: Function to compute the adjacency matrix of an area. — adj_mat","text":"","code":"adj_mat(modelsparse, ngbs = 1, eigen_sys = FALSE, which_eigs = 1)"},{"path":"/reference/adj_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"adj_mat: Function to compute the adjacency matrix of an area. — adj_mat","text":"modelsparse setA object returned function model2sparse. ngbs Numeric. Number neighbors (see details). eigen_sys Logical. TRUE eigen analyses adjacency matrix returned. which_eigs Numeric. eigen value eigen vector returned.","code":""},{"path":"/reference/adj_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"adj_mat: Function to compute the adjacency matrix of an area. — adj_mat","text":"Returns adjacency matrix class sparseMatrix n+2 x n columns (n number non-NA cells grid_base) coordinates non-NA cells grid_base.","code":""},{"path":"/reference/adj_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"adj_mat: Function to compute the adjacency matrix of an area. — adj_mat","text":"grid_base raster object area dispersal process occur. number neighbors depends dispersal abilities species spatial resolution grid_base; example, species's big dispersal abilities move throughout 1 km^2 per day, idea give approximate number moving neighbors (pixels) per unit time.","code":""},{"path":"/reference/adj_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"adj_mat: Function to compute the adjacency matrix of an area. — adj_mat","text":"","code":"if (FALSE) { data(\"wrld_simpl\", package = \"maptools\") mx <- wrld_simpl[wrld_simpl$NAME==\"Mexico\",] mx_grid <- shape2Grid(mx,0.5) mx_sparse <- bamm::model2sparse(mx_grid) adj_mx <- bamm::adj_mat(mx_sparse,ngbs=1) # Adjacency matrix from a niche model model_path <- system.file(\"extdata/Lepus_californicus_cont.tif\",                           package = \"bamm\") model <- raster::raster(model_path)  sparse_mod <- bamm::model2sparse(model,threshold=0.05) adj_mod <- bamm::adj_mat(sparse_mod,ngbs=1) }"},{"path":"/reference/bam-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class bam digram — bam-class","title":"Class bam digram — bam-class","text":"Class bam digram","code":""},{"path":"/reference/bam-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class bam digram — bam-class","text":"sdm_sim list sparse vectors representing area occupied palatable_matrices list sparse vectors representing palatable sites. sim_steps Number simulation steps species","code":""},{"path":"/reference/bam-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class bam digram — bam-class","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/bam_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"bam_clusters: Function to estimate the connectivity of suitable areas — bam_clusters","title":"bam_clusters: Function to estimate the connectivity of suitable areas — bam_clusters","text":"Function estimate connectivity suitable areas given adjacency matrix.","code":""},{"path":"/reference/bam_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bam_clusters: Function to estimate the connectivity of suitable areas — bam_clusters","text":"","code":"bam_clusters(model, ngbs = 1, plot_model = FALSE)"},{"path":"/reference/bam_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bam_clusters: Function to estimate the connectivity of suitable areas — bam_clusters","text":"model niche model raster format ngbs Numeric. Number neighbors (see details). plot_model Logical. Indicates whether plot model cluster map.","code":""},{"path":"/reference/bam_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"bam_clusters: Function to estimate the connectivity of suitable areas — bam_clusters","text":"list data.frame coordinates cluster leaflet map.","code":""},{"path":"/reference/bam_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bam_clusters: Function to estimate the connectivity of suitable areas — bam_clusters","text":"grid_base raster object area dispersal process occur. number neighbors depends dispersal abilities species spatial resolution grid_base; example, species's big dispersal abilities move throughout 1 km^2 per day, idea give approximate number moving neighbors (pixels) per unit time.","code":""},{"path":"/reference/bam_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bam_clusters: Function to estimate the connectivity of suitable areas — bam_clusters","text":"","code":"if (FALSE) { model_path <- system.file(\"extdata/Lepus_californicus_cont.tif\",                           package = \"bamm\") model <- raster::raster(model_path) model <- model > 0.7 clusterin <- bamm::bam_clusters(model,ngbs=1,plot_model=TRUE) clusterin@interactive_map }"},{"path":"/reference/bam_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"bam_sim: Simulate dispersal dynamics using the set B of the BAM framework. — bam_sim","title":"bam_sim: Simulate dispersal dynamics using the set B of the BAM framework. — bam_sim","text":"bam_sim: Simulate dispersal dynamics using set B BAM framework.","code":""},{"path":"/reference/bam_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bam_sim: Simulate dispersal dynamics using the set B of the BAM framework. — bam_sim","text":"","code":"bam_sim(   sp1,   sp2,   set_M,   initial_points,   periods_toxic,   periods_suitable,   nsteps,   progress_bar = TRUE )"},{"path":"/reference/bam_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bam_sim: Simulate dispersal dynamics using the set B of the BAM framework. — bam_sim","text":"sp1 Niche model focal species (one disperses). sp2 Niche model species sp1 interacts (currently dispersal dynamics species). set_M setM object containing adjacency matrix sp1. See adj_mat initial_points sparse vector returned function occs2sparse periods_toxic Time periods sps2 takes develop defense mechanisms (.e. toxic). periods_suitable time sp2 takes become non-toxic nsteps Number steps run simulation progress_bar Show progress bar","code":""},{"path":"/reference/bam_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bam_sim: Simulate dispersal dynamics using the set B of the BAM framework. — bam_sim","text":"","code":"if (FALSE) { urap <- system.file(\"extdata/urania_omph/urania_guanahacabibes.tif\",                                   package = \"bamm\") ura <- raster::raster(urap) ompp <- system.file(\"extdata/urania_omph/omphalea_guanahacabibes.tif\",                                   package = \"bamm\") omp <- raster::raster(ompp) msparse <- bamm::model2sparse(ura) init_coordsdf <- data.frame(x=-84.38751, y= 22.02932) initial_points <- bamm::occs2sparse(modelsparse = msparse,init_coordsdf) set_M <- bamm::adj_mat(modelsparse = msparse,ngbs = 1) ura_sim <- bamm::bam_sim(sp1=ura, sp2=omp, set_M=set_M,                         initial_points=initial_points,                         periods_toxic=3,                         periods_suitable=3,                         nsteps=40) # Animation example anp <-\"C:/Users/l916o895/Dropbox/TeoriadeBAM/articulo_bam/ura_omp_sim.gif\" new_sim <- bamm::sim2Animation(sdm_simul = ura_sim,                               which_steps = 1:ura_sim@sim_steps,                               fmt = \"GIF\",                               filename = anp) }"},{"path":"/reference/bam_ssim.html","id":null,"dir":"Reference","previous_headings":"","what":"bam_ssim: Simulate dispersal dynamics using the set B of the BAM framework. — bam_ssim","title":"bam_ssim: Simulate dispersal dynamics using the set B of the BAM framework. — bam_ssim","text":"bam_ssim: Simulate dispersal dynamics using set B BAM framework.","code":""},{"path":"/reference/bam_ssim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bam_ssim: Simulate dispersal dynamics using the set B of the BAM framework. — bam_ssim","text":"","code":"bam_ssim(   sp1,   sp2,   set_M,   initial_points,   periods_toxic,   periods_suitable,   dispersal_prob = 0.85,   palatable_matrices = FALSE,   nsteps,   progress_bar = TRUE )"},{"path":"/reference/bam_ssim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bam_ssim: Simulate dispersal dynamics using the set B of the BAM framework. — bam_ssim","text":"sp1 Niche model focal species (one disperses). sp2 Niche model species sp1 interacts (currently dispersal dynamics species). set_M setM object containing adjacency matrix sp1. See adj_mat initial_points sparse vector returned function occs2sparse periods_toxic Time periods sps2 takes develop defense mechanisms (.e. toxic). periods_suitable time sp2 takes become non-toxic dispersal_prob numeric value indicating probability disperse neighboring cells. probability assumed binomially distributed palatable_matrices Logical. TRUE palatable matrices time returned. nsteps Number steps run simulation progress_bar Show progress bar","code":""},{"path":"/reference/bam_ssim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bam_ssim: Simulate dispersal dynamics using the set B of the BAM framework. — bam_ssim","text":"","code":"if (FALSE) { urap <- system.file(\"extdata/urania_omph/urania_guanahacabibes.tif\",                                   package = \"bamm\") ura <- raster::raster(urap) ompp <- system.file(\"extdata/urania_omph/omphalea_guanahacabibes.tif\",                                   package = \"bamm\") omp <- raster::raster(ompp) msparse <- bamm::model2sparse(ura) init_coordsdf <- data.frame(x=-84.38751, y= 22.02932) initial_points <- bamm::occs2sparse(modelsparse = msparse,init_coordsdf) set_M <- bamm::adj_mat(modelsparse = msparse,ngbs = 1) ura_sim <- bamm::bam_ssim(sp1=ura, sp2=omp, set_M=set_M,                           dispersal_prob = 0.5,                           initial_points=initial_points,                           periods_toxic=3,                           periods_suitable=1,                           nsteps=40) # Animation example anp <-\"C:/Users/l916o895/Dropbox/TeoriadeBAM/articulo_bam/ura_omp_sim.gif\" new_sim <- bamm::sim2Animation(sdm_simul = ura_sim,                               which_steps = 1:ura_sim@sim_steps,                               fmt = \"GIF\",                               filename = anp) }"},{"path":"/reference/bioindex-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class  bioindex — bioindex-class","title":"Class  bioindex — bioindex-class","text":"Class  bioindex","code":""},{"path":"/reference/bioindex-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class  bioindex — bioindex-class","text":"alpha matrix richness species per site omega matrix range size every species dispersion_field matrix set ranges species occur locality","code":""},{"path":"/reference/bioindex-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class  bioindex — bioindex-class","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/bioindex_sparse-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class  bioindex_sparse — bioindex_sparse-class","title":"Class  bioindex_sparse — bioindex_sparse-class","text":"Class  bioindex_sparse","code":""},{"path":"/reference/bioindex_sparse-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class  bioindex_sparse — bioindex_sparse-class","text":"alpha sparse matrix richness species per site omega sparse matrix range size every species dispersion_field sparse matrix set ranges species occur locality","code":""},{"path":"/reference/bioindex_sparse-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class  bioindex_sparse — bioindex_sparse-class","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/community_sim-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class  community_sim digram — community_sim-class","title":"Class  community_sim digram — community_sim-class","text":"Class  community_sim digram","code":""},{"path":"/reference/community_sim-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class  community_sim digram — community_sim-class","text":"community_sim list sparse vectors representing area occupied species","code":""},{"path":"/reference/community_sim-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class  community_sim digram — community_sim-class","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/community_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"community_bam: Community bamm — community_sim","title":"community_bam: Community bamm — community_sim","text":"Estimate community dynamics using bamm framework","code":""},{"path":"/reference/community_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"community_bam: Community bamm — community_sim","text":"","code":"community_sim(en_models, ngbs_vect, init_coords, nsteps, parallel, ...)"},{"path":"/reference/community_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"community_bam: Community bamm — community_sim","text":"en_models stack directory ecological niche models species community. ngbs_vect vector init_coords data.frame 3 columns: sp_name, x y; x longitude y latitude initial dispersal points nsteps Number iteration steps simulation. parallel TRUE simulation run parallel. Default FALSE ... Parameters functions bamm class","code":""},{"path":"/reference/community_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"community_bam: Community bamm — community_sim","text":"","code":"if (FALSE) { lagos_path <- system.file(\"extdata/conejos\",                           package = \"bamm\") enm_path <- list.files(lagos_path,                        pattern = \".tif\",                        full.names = TRUE) en_models <- raster::stack(enm_path) ngbs_vect <- sample(1:2,replace = TRUE,                     size = raster::nlayers(en_models)) init_coords <- read.csv(file.path(lagos_path,                                   \"lagos_initit.csv\")) nsteps <- 30 sdm_comm <- bamm::community_sim(en_models = enm_path,                                ngbs_vect = ngbs_vect,                                init_coords = init_coords,                                nsteps = nsteps,                                threshold = 0.1)  }"},{"path":"/reference/csd-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class  csd — csd-class","title":"Class  csd — csd-class","text":"Class  csd","code":""},{"path":"/reference/csd-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class  csd — csd-class","text":"connections data.frame four columns: x, y, clusterID cluster_size interactive_map leaflet map markers showing geographical clusters raster_map raster map cluster IDs values.","code":""},{"path":"/reference/csd-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class  csd — csd-class","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/csd_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"csd_estimate: Estimate the connectivity suitability and dispersal plot — csd_estimate","title":"csd_estimate: Estimate the connectivity suitability and dispersal plot — csd_estimate","text":"csd_plot gives estimate number geographic clusters given set dispersal hypothesis suitability raster","code":""},{"path":"/reference/csd_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"csd_estimate: Estimate the connectivity suitability and dispersal plot — csd_estimate","text":"","code":"csd_estimate(model, dispersal_steps = c(2, 4, 8, 16, 32, 64))"},{"path":"/reference/csd_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"csd_estimate: Estimate the connectivity suitability and dispersal plot — csd_estimate","text":"model raster model setA object representing suitability model dispersal_steps numeric vector elements representing dispersal hypothesis test.","code":""},{"path":"/reference/csd_estimate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"csd_estimate: Estimate the connectivity suitability and dispersal plot — csd_estimate","text":"Luis Osorio-Olvera & Jorge Soberon","code":""},{"path":"/reference/csd_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"csd_estimate: Estimate the connectivity suitability and dispersal plot — csd_estimate","text":"","code":"if (FALSE) { model_path <- system.file(\"extdata/Lepus_californicus_cont.tif\",                           package = \"bamm\") model <- raster::raster(model_path) model <- model > 0.7 csd_plot <- bamm::csd_estimate(model,                          dispersal_steps=c(2,4,8,16,32,45))   }"},{"path":"/reference/csim2pam.html","id":null,"dir":"Reference","previous_headings":"","what":"csim2pam: Converts community simulation to a Presence Absence Matrix (PAM) — csim2pam","title":"csim2pam: Converts community simulation to a Presence Absence Matrix (PAM) — csim2pam","text":"Converts community simulation object Presence Absence Matrices (PAM) given simulation steps.","code":""},{"path":"/reference/csim2pam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"csim2pam: Converts community simulation to a Presence Absence Matrix (PAM) — csim2pam","text":"","code":"csim2pam(community_sim, which_steps)"},{"path":"/reference/csim2pam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"csim2pam: Converts community simulation to a Presence Absence Matrix (PAM) — csim2pam","text":"community_sim object class community_bam. which_steps Steps simulation object converted PAM","code":""},{"path":"/reference/csim2pam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"csim2pam: Converts community simulation to a Presence Absence Matrix (PAM) — csim2pam","text":"","code":"if (FALSE) { lagos_path <- system.file(\"extdata/conejos\",                           package = \"bamm\") enm_path <- list.files(lagos_path,                        pattern = \".tif\",                     full.names = TRUE) en_models <- raster::stack(enm_path) ngbs_vect <- sample(1:2,replace = T,                     size = raster::nlayers(en_models)) init_coords <- read.csv(file.path(lagos_path,                                   \"lagos_initit.csv\")) nsteps <- 30 sdm_comm <- bamm::community_sim(en_models = enm_path,                                ngbs_vect = ngbs_vect,                                init_coords = init_coords,                                nsteps = nsteps,                                threshold = 0.1)  pamt10 <- bamm::csim2pam(community_sim = sdm_comm ,                        which_steps = 10) pams <- bamm::csim2pam(community_sim = sdm_comm ,                       which_steps = c(1:10)) }"},{"path":"/reference/diversity_range-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class  diversity_range — diversity_range-class","title":"Class  diversity_range — diversity_range-class","text":"Class  diversity_range","code":""},{"path":"/reference/diversity_range-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class  diversity_range — diversity_range-class","text":"alpha column vector species richness per site omega column vector size area distribution per species. alpha_raster Species richness raster format. dispersion_field matrix set ranges species occur locality. dispersion_field_raster Raster object observed values dispersion field. diversity_range_raster Raster object diversity range. diversity_range_colors Colors plot endemism levels. null_dispersion_field_dist matrix dispersion field null distribution. xy_coordinates matrix geographical coordinates n_iterations Number iterations used estimate dispersion field null distribution. nsps Number species PAM. nsites Number sites PAM.","code":""},{"path":"/reference/diversity_range-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class  diversity_range — diversity_range-class","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/diversity_range_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"range_diversity_analysis: diversity analysis — diversity_range_analysis","title":"range_diversity_analysis: diversity analysis — diversity_range_analysis","text":"diversity_range_analysis biodiversity indices related diversity-range plots","code":""},{"path":"/reference/diversity_range_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"range_diversity_analysis: diversity analysis — diversity_range_analysis","text":"","code":"diversity_range_analysis(   pam,   xy_mat = NULL,   lower_interval = 0.05,   upper_interval = 0.95,   raster_templete = NULL,   niter = 100,   return_null_dfield = FALSE,   parallel = TRUE,   n_cores = 2 )"},{"path":"/reference/diversity_range_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"range_diversity_analysis: diversity analysis — diversity_range_analysis","text":"pam Presence-Absence-Matrix matrix class sparse matrix. xy_mat two dimensional matrix longitude latitude data. lower_interval Lower interval. upper_interval Upper interval. raster_templete raster template. niter Number iterations obtain distribution. return_null_dfield TRUE null distribution dispersal field returned. parallel TRUE computations performed parallel. n_cores Number cores parallel computation.","code":""},{"path":"/reference/diversity_range_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"range_diversity_analysis: diversity analysis — diversity_range_analysis","text":"","code":"if (FALSE) { set.seed(111) pam <- matrix(rbinom(10000,1,0.5),nrow = 100,ncol = 1000) rdivan <- bamm::diversity_range_analysis(pam=pam,parallel = FALSE,                                    return_null_dfield=TRUE) bamm::plot(rdivan,plot_type=\"diversity_range\") # Lagomorphos lagos_path <- system.file(\"extdata/conejos\",                           package = \"bamm\") enm_path <- list.files(lagos_path,                        pattern = \".tif\",                        full.names = TRUE) en_models <- raster::stack(enm_path) >0.01 nonas <- which(!is.na(en_models[[1]][])) xy_mat <- sp::coordinates(en_models[[1]])[ nonas,] pam <- bamm::models2pam(en_models,sparse=FALSE) rdivan <- bamm::diversity_range_analysis(pam=pam,parallel = FALSE,                                    xy_mat=xy_mat,                                    raster_templete = en_models[[1]],                                    return_null_dfield=TRUE) bamm::plot(rdivan,plot_type=\"diversity_range\") bamm::plot(rdivan,plot_type=\"diversity_range_map\") bamm::plot(rdivan,plot_type=\"diversity_range_interactive\")  }"},{"path":"/reference/dot-nonzero.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to compute the elements in g0\nthat have no zero values.The function is taken from the\nRingo package — .nonzero","title":"Helper function to compute the elements in g0\nthat have no zero values.The function is taken from the\nRingo package — .nonzero","text":"Helper function compute elements g0 zero values.function taken Ringo package Helper function compute elements g0 zero values.function taken Ringo package","code":""},{"path":"/reference/dot-nonzero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to compute the elements in g0\nthat have no zero values.The function is taken from the\nRingo package — .nonzero","text":"","code":".nonzero(x)  .nonzero(x)"},{"path":"/reference/dot-nonzero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to compute the elements in g0\nthat have no zero values.The function is taken from the\nRingo package — .nonzero","text":"x matrix class \"dgCMatrix\"","code":""},{"path":"/reference/eigen_bam.html","id":null,"dir":"Reference","previous_headings":"","what":"eigen_bam: Compute the Eigen system of two bam objects — eigen_bam","title":"eigen_bam: Compute the Eigen system of two bam objects — eigen_bam","text":"Calculates Eigen values Eigen vectors bam objects","code":""},{"path":"/reference/eigen_bam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eigen_bam: Compute the Eigen system of two bam objects — eigen_bam","text":"","code":"eigen_bam(A = NULL, M = NULL, which_eigen = 1, rmap = TRUE)"},{"path":"/reference/eigen_bam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eigen_bam: Compute the Eigen system of two bam objects — eigen_bam","text":"bam object class setA. M bam object class setM. which_eigen integer representing eigen value eigen vector computed. rmap Logical. TRUE function return map eigen vector product .","code":""},{"path":"/reference/eigen_bam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"eigen_bam: Compute the Eigen system of two bam objects — eigen_bam","text":"table","code":""},{"path":"/reference/eigen_bam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"eigen_bam: Compute the Eigen system of two bam objects — eigen_bam","text":"","code":"if (FALSE) { model_path <- system.file(\"extdata/Lepus_californicus_cont.tif\",                           package = \"bamm\") model <- raster::raster(model_path) sparse_mod <- bamm::model2sparse(model = model) adj_mod <- bamm::adj_mat(sparse_mod,ngbs = 1,eigen_sys = T) eig_bam <- bamm::eigen_bam(A=sparse_mod,M=adj_mod) raster::plot(eig_bam$map) }"},{"path":"/reference/g_area-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 classes to organize data and results of bamm objects — g_area-class","title":"S4 classes to organize data and results of bamm objects — g_area-class","text":"S4 classes organize data results bamm objects","code":""},{"path":"/reference/g_area-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 classes to organize data and results of bamm objects — g_area-class","text":"coordinates two column matrix coordinates eigen_vec Eigen vector adjacency matrix eigen_val Eigen value adjacency matrix slot g_model raster representing geographic area slot g_sparse sparse matrix geographic area","code":""},{"path":"/reference/g_area-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"S4 classes to organize data and results of bamm objects — g_area-class","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/jaccard.html","id":null,"dir":"Reference","previous_headings":"","what":"jaccard: Estimates the Jaccard index for comparing two binary maps — jaccard","title":"jaccard: Estimates the Jaccard index for comparing two binary maps — jaccard","text":"Estimates Jaccard index comparing two binary maps","code":""},{"path":"/reference/jaccard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"jaccard: Estimates the Jaccard index for comparing two binary maps — jaccard","text":"","code":"jaccard(m1, m2)"},{"path":"/reference/jaccard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"jaccard: Estimates the Jaccard index for comparing two binary maps — jaccard","text":"m1 binary raster object class setA returned function model2sparse. m2 binary raster object class setA returned function model2sparse.","code":""},{"path":"/reference/jaccard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"jaccard: Estimates the Jaccard index for comparing two binary maps — jaccard","text":"Returns data.frame three values: 1) jaccard (Jaccard index), 2) percentage_m1 (percentage m1 intersection \\(|\\cap B|\\) represents), 3) percentage_m2","code":""},{"path":"/reference/jaccard.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"jaccard: Estimates the Jaccard index for comparing two binary maps — jaccard","text":"Jaccard index computed follows $$J(,B)={{|\\cap B|}\\{|\\cup B|}}={{|\\cap B|}\\{||+|B|-|\\cap B|}}. $$","code":""},{"path":"/reference/jaccard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"jaccard: Estimates the Jaccard index for comparing two binary maps — jaccard","text":"","code":"m1_path <- system.file(\"extdata/conejos/Lepus_othus_cont.tif\",                        package = \"bamm\") m2_path <- system.file(\"extdata/conejos/Brachylagus_idahoensis_cont.tif\",                        package = \"bamm\") m1 <- raster::raster(m1_path) > 0.01 m2 <- raster::raster(m2_path) >0.01 jcc <- bamm::jaccard(m1,m2) print(jcc) #>      jaccard percentage_of_m1 percentage_of_m2 #> 1 0.04545455         5.475763         21.10727"},{"path":"/reference/leaflet-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class  leaflet leaflet — leaflet-class","title":"Class  leaflet leaflet — leaflet-class","text":"Class  leaflet leaflet","code":""},{"path":"/reference/leaflet-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class  leaflet leaflet — leaflet-class","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/model2sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"model2sparse: Converts a niche model into a diagonal sparse matrix — model2sparse","title":"model2sparse: Converts a niche model into a diagonal sparse matrix — model2sparse","text":"model2sparse: Converts niche model diagonal sparse matrix","code":""},{"path":"/reference/model2sparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"model2sparse: Converts a niche model into a diagonal sparse matrix — model2sparse","text":"","code":"model2sparse(model, threshold = NULL)"},{"path":"/reference/model2sparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"model2sparse: Converts a niche model into a diagonal sparse matrix — model2sparse","text":"model raster object representing geographic projection niche model. threshold threshold convert continuous model binary model.","code":""},{"path":"/reference/model2sparse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"model2sparse: Converts a niche model into a diagonal sparse matrix — model2sparse","text":"diagonal sparse matrix representing geographic projection niche model.","code":""},{"path":"/reference/model2sparse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"model2sparse: Converts a niche model into a diagonal sparse matrix — model2sparse","text":"","code":"if (FALSE) { model_path <- system.file(\"extdata/Lepus_californicus_cont.tif\",                           package = \"bamm\") model <- raster::raster(model_path)  sparse_mod <- bamm::model2sparse(model, threshold=0.05) }"},{"path":"/reference/models2pam.html","id":null,"dir":"Reference","previous_headings":"","what":"models2pam: Converts binary rasters to a PAM — models2pam","title":"models2pam: Converts binary rasters to a PAM — models2pam","text":"Function convert binary raster models Presence Absences Matrix.","code":""},{"path":"/reference/models2pam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"models2pam: Converts binary rasters to a PAM — models2pam","text":"","code":"models2pam(mods_stack, sparse = TRUE, parallel = FALSE, ncores = 2)"},{"path":"/reference/models2pam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"models2pam: Converts binary rasters to a PAM — models2pam","text":"mods_stack raster stack containing binary models species community. sparse Logical. TRUE PAM returned sparse matrix. parallel Logical. TRUE computations done parallel ncores Integer. Number cores run parallel process.","code":""},{"path":"/reference/models2pam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"models2pam: Converts binary rasters to a PAM — models2pam","text":"PAM.","code":""},{"path":"/reference/models2pam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"models2pam: Converts binary rasters to a PAM — models2pam","text":"","code":"if (FALSE) { lagos_path <- system.file(\"extdata/conejos\",                           package = \"bamm\") enm_path <- list.files(lagos_path,                        pattern = \".tif\",                        full.names = TRUE) en_models <- raster::stack(enm_path) >0.01 pam <- bamm::models2pam(en_models,sparse=FALSE,parallel=T,ncores=2) }"},{"path":"/reference/null_dispersion_field_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"null_dispersion_field_distribution: Null distribution of the\ndispersion field — null_dispersion_field_distribution","title":"null_dispersion_field_distribution: Null distribution of the\ndispersion field — null_dispersion_field_distribution","text":"null_dispersion_field_distribution estimates random distribution dispersion field values.","code":""},{"path":"/reference/null_dispersion_field_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"null_dispersion_field_distribution: Null distribution of the\ndispersion field — null_dispersion_field_distribution","text":"","code":"null_dispersion_field_distribution(   pam,   n_iter = 10,   parallel = TRUE,   n_cores = 2 )"},{"path":"/reference/null_dispersion_field_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"null_dispersion_field_distribution: Null distribution of the\ndispersion field — null_dispersion_field_distribution","text":"pam Presence-Absence-Matrix matrix class sparse matrix. n_iter Number iterations obtain distribution. parallel TRUE computations performed parallel. n_cores Number cores parallel computation.","code":""},{"path":"/reference/null_dispersion_field_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"null_dispersion_field_distribution: Null distribution of the\ndispersion field — null_dispersion_field_distribution","text":"data matrix size nrow(pam) X n_iter dispersion field values.","code":""},{"path":"/reference/null_dispersion_field_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"null_dispersion_field_distribution: Null distribution of the\ndispersion field — null_dispersion_field_distribution","text":"Estimates random distribution dispersion field values. obtain          random values uses function codepermute_pam          step iterations.","code":""},{"path":"/reference/null_dispersion_field_distribution.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"null_dispersion_field_distribution: Null distribution of the\ndispersion field — null_dispersion_field_distribution","text":"Soberon J, Cavner J (2015). “Indices Biodiversity Pattern Based Presence-Absence Matrices: GIS Implementation.” Biodiversity Informatics, 10, 22--34.","code":""},{"path":"/reference/null_dispersion_field_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"null_dispersion_field_distribution: Null distribution of the\ndispersion field — null_dispersion_field_distribution","text":"","code":"set.seed(111) pam <- matrix(rbinom(100,1,0.3),nrow = 10,ncol = 10) dfield_rand <- bamm::null_dispersion_field_distribution(pam,n_iter=10,                                                        parallel=FALSE,                                                        n_cores = 2) #> New names: #> • `dfield` -> `dfield...1` #> • `dfield` -> `dfield...2` #> • `dfield` -> `dfield...3` #> • `dfield` -> `dfield...4` #> • `dfield` -> `dfield...5` #> • `dfield` -> `dfield...6` #> • `dfield` -> `dfield...7` #> • `dfield` -> `dfield...8` #> • `dfield` -> `dfield...9` #> • `dfield` -> `dfield...10`"},{"path":"/reference/occs2sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"occs2sparse: Converts occurrence data into a sparse matrix object — occs2sparse","title":"occs2sparse: Converts occurrence data into a sparse matrix object — occs2sparse","text":"occs2sparse: Converts occurrence data sparse matrix object","code":""},{"path":"/reference/occs2sparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"occs2sparse: Converts occurrence data into a sparse matrix object — occs2sparse","text":"","code":"occs2sparse(modelsparse, occs)"},{"path":"/reference/occs2sparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"occs2sparse: Converts occurrence data into a sparse matrix object — occs2sparse","text":"modelsparse setA object returned function model2sparse occs matrix data.frame containing two columns. first one longitude second latitude.","code":""},{"path":"/reference/occs2sparse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"occs2sparse: Converts occurrence data into a sparse matrix object — occs2sparse","text":"sparse vector zeros ones.","code":""},{"path":"/reference/occs2sparse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"occs2sparse: Converts occurrence data into a sparse matrix object — occs2sparse","text":"","code":"if (FALSE) { model_path <- system.file(\"extdata/Lepus_californicus_cont.tif\",                           package = \"bamm\") model <- raster::raster(model_path)  sparse_mod <- bamm::model2sparse(model,threshold=0.05)  occs_lep_cal <- data.frame(longitude = c(-115.10417,                                          -104.90417),                            latitude = c(29.61846,                                         29.81846))  occs_sparse <- bamm::occs2sparse(modelsparse = sparse_mod,                                 occs = occs_lep_cal)  }"},{"path":"/reference/pam-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class  pam Presence-Absence Matrix — pam-class","title":"Class  pam Presence-Absence Matrix — pam-class","text":"Class  pam Presence-Absence Matrix","code":""},{"path":"/reference/pam-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class  pam Presence-Absence Matrix — pam-class","text":"pams list sparse matrices representing Presence-Absence Matrix simulation time which_steps Simulation steps sp_names Names species PAM grid Raster grid studied area cellIDs Cells ids PAM sites","code":""},{"path":"/reference/pam-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class  pam Presence-Absence Matrix — pam-class","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/pam2bioindex.html","id":null,"dir":"Reference","previous_headings":"","what":"pam2bioindex: PAM to biodiversity index — pam2bioindex","title":"pam2bioindex: PAM to biodiversity index — pam2bioindex","text":"pam2bioindex estimates various biodiversity indices certain PAM.","code":""},{"path":"/reference/pam2bioindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pam2bioindex: PAM to biodiversity index — pam2bioindex","text":"","code":"pam2bioindex(pam, biodiv_index = \"dispersion_field\", as_sparse = FALSE)"},{"path":"/reference/pam2bioindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pam2bioindex: PAM to biodiversity index — pam2bioindex","text":"pam Presence-Absence-Matrix matrix class sparse matrix. biodiv_index Possible values alpha, omega, dispersion_field, . as_sparse Return indices sparse objects","code":""},{"path":"/reference/pam2bioindex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pam2bioindex: PAM to biodiversity index — pam2bioindex","text":"biodiversity indices can found Soberon Cavner (2015)","code":""},{"path":"/reference/pam2bioindex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"pam2bioindex: PAM to biodiversity index — pam2bioindex","text":"Soberon J, Cavner J (2015). “Indices Biodiversity Pattern Based Presence-Absence Matrices: GIS Implementation.” Biodiversity Informatics, 10, 22--34.","code":""},{"path":"/reference/pam2bioindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pam2bioindex: PAM to biodiversity index — pam2bioindex","text":"","code":"set.seed(111) pam <- matrix(rbinom(100,1,0.3),nrow = 10,ncol = 10) bioindices <- bamm::pam2bioindex(pam=pam,biodiv_index=\"all\") # Return results as sparse models bioindices <- bamm::pam2bioindex(pam=pam,biodiv_index=\"all\",as_sparse=TRUE)"},{"path":"/reference/pam2richness.html","id":null,"dir":"Reference","previous_headings":"","what":"pam2richness: Converts Presence Absence Matrix (pam object) to\nrichness raster — pam2richness","title":"pam2richness: Converts Presence Absence Matrix (pam object) to\nrichness raster — pam2richness","text":"Converts Presence Absence Matrix (pam object) richness raster","code":""},{"path":"/reference/pam2richness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pam2richness: Converts Presence Absence Matrix (pam object) to\nrichness raster — pam2richness","text":"","code":"pam2richness(pamobj, which_steps)"},{"path":"/reference/pam2richness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pam2richness: Converts Presence Absence Matrix (pam object) to\nrichness raster — pam2richness","text":"pamobj object class pam see csim2pam which_steps Time steps pam convert","code":""},{"path":"/reference/pam2richness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pam2richness: Converts Presence Absence Matrix (pam object) to\nrichness raster — pam2richness","text":"","code":"if (FALSE) { lagos_path <- system.file(\"extdata/conejos\",                           package = \"bamm\") enm_path <- list.files(lagos_path,                        pattern = \".tif\",                     full.names = TRUE) en_models <- raster::stack(enm_path) ngbs_vect <- sample(1:2,replace = T,                     size = raster::nlayers(en_models)) init_coords <- read.csv(file.path(lagos_path,                                   \"lagos_initit.csv\")) nsteps <- 30 sdm_comm <- bamm::community_sim(en_models = enm_path,                           ngbs_vect = ngbs_vect,                           init_coords = init_coords,                           nsteps = nsteps,                           threshold = 0.1)  pams <-bamm::csim2pam(community_sim = sdm_comm ,                 which_steps = c(1:20)) richness_stack <- bamm::pam2richness(pams,which_steps=pams@which_steps) raster::plot(richness_stack) }"},{"path":"/reference/permute_pam.html","id":null,"dir":"Reference","previous_headings":"","what":"permute_pam: Function to permute a Presence-Absence-Matrix. — permute_pam","title":"permute_pam: Function to permute a Presence-Absence-Matrix. — permute_pam","text":"permute_pam: Function permute Presence-Absence-Matrix.","code":""},{"path":"/reference/permute_pam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"permute_pam: Function to permute a Presence-Absence-Matrix. — permute_pam","text":"","code":"permute_pam(m, niter = NULL, as_sparse = FALSE)"},{"path":"/reference/permute_pam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"permute_pam: Function to permute a Presence-Absence-Matrix. — permute_pam","text":"m Presence-Absence-Matrix (PAM) binary matrix columns representing species rows sites. niter Number iterations permute PAM. as_sparse TRUE PAM returned sparse matrix","code":""},{"path":"/reference/permute_pam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"permute_pam: Function to permute a Presence-Absence-Matrix. — permute_pam","text":"Returns list length equal number sites PAM (n=nrows(m)). entry list permuted species.","code":""},{"path":"/reference/permute_pam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"permute_pam: Function to permute a Presence-Absence-Matrix. — permute_pam","text":"function implementation curve ball algorithm           following Strona G, Nappo D, Boccacci F, Fattorini S, San-Miguel-Ayanz J (2014). “fast unbiased procedure randomize ecological binary matrices fixed row column totals.” Nature Communications, 5(1), 1--9. ISSN 20411723, doi:10.1038/ncomms5114 , www.r-project.org. .","code":""},{"path":"/reference/permute_pam.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"permute_pam: Function to permute a Presence-Absence-Matrix. — permute_pam","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/permute_pam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"permute_pam: Function to permute a Presence-Absence-Matrix. — permute_pam","text":"","code":"set.seed(111) pam <- matrix(rbinom(100,1,0.3),nrow = 10,ncol = 10) ppam <- bamm::permute_pam(m = pam,niter = NULL,as_sparse = FALSE) # Check if matrices are different all(pam == ppam) #> [1] FALSE # Check if row totals are the same all(Matrix::rowSums(pam) == Matrix::rowSums(ppam)) #> [1] TRUE # Check if column total are the same all(Matrix::colSums(pam) == Matrix::colSums(ppam)) #> [1] TRUE"},{"path":"/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for objects of class diversity_range bamm. — plot,diversity_range,ANY-method","title":"Plot method for objects of class diversity_range bamm. — plot,diversity_range,ANY-method","text":"Plot method objects class diversity_range bamm.","code":""},{"path":"/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for objects of class diversity_range bamm. — plot,diversity_range,ANY-method","text":"","code":"# S4 method for diversity_range,ANY plot(   x,   xlab = NULL,   plot_type = \"diversity_range\",   legend = TRUE,   legend_position = \"bottomright\",   ylab = NULL,   col = NULL,   pch = NULL,   pch_legend = 19,   radius = 0.5,   ... )"},{"path":"/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for objects of class diversity_range bamm. — plot,diversity_range,ANY-method","text":"x object class diversity_range xlab x label plot_type Plot type: possible options: \"diversity_range\" (range-diversity plot),                  \"diversity_range_map\" (raster map                  diversity_range categories),                  \"alpha\" (raster map alpha diversity values),                  \"dispersion_field\" (raster dispersion field) legend Logical. TRUE legend categorical diversity range values appear. legend_position Legend position. ylab y label col Plot colors. pch Patch type. pch_legend Patch type legends. radius Size patch interactive map. ... Graphical parameters. argument can passed 1) base::plot, axes=FALSE, main='title', ylab='latitude' 2) leaflet::leaflet 3) leaflet::addCircleMarkers.","code":""},{"path":"/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method of the package bamm. — predict,bam-method","title":"Predict method of the package bamm. — predict,bam-method","text":"predicts species' distribution suitability changes","code":""},{"path":"/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method of the package bamm. — predict,bam-method","text":"","code":"# S4 method for bam predict(   object,   niche_layers,   nbgs_vec = NULL,   nsteps_vec,   stochastic_dispersal = FALSE,   disp_prop2_suitability = TRUE,   disper_prop = 0.5,   animate = FALSE,   period_names = NULL,   fmt = \"GIF\",   filename,   bg_color = \"#F6F2E5\",   suit_color = \"#0076BE\",   occupied_color = \"#03C33F\",   png_keyword = \"sdm_sim\",   ani.width = 1200,   ani.height = 1200,   ani.res = 300 )"},{"path":"/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method of the package bamm. — predict,bam-method","text":"object class bam. niche_layers raster RasterStack niche models time period nbgs_vec vector number neighbors adjacency matrices nsteps_vec Number simulation steps time period. stochastic_dispersal Logical. dispersal depends probability visiting neighbor cells (Moore neighborhood). disp_prop2_suitability Logical. probability dispersal proportional suitability reachable cells. proportional value must declared parameter `disper_prop`. disper_prop Probability dispersal reachable cells. animate Logical. TRUE dispersal animation climate change scenarios created period_names Character vector names periods animated. Default NULL. fmt Animation format. Possible values GIF HTML filename File name. bg_color Color unsuitable pixels. Default \"#F6F2E5\". suit_color Color suitable pixels. Default \"#0076BE\". occupied_color Color occupied pixels. Default \"#03C33F\". png_keyword keyword name png images generated function ani.width Animation width unit px ani.height Animation height unit px ani.res Animation resolution unit px","code":""},{"path":"/reference/predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict method of the package bamm. — predict,bam-method","text":"","code":"if (FALSE) { # rm(list = ls()) # Read raster model for Lepus californicus model_path <- system.file(\"extdata/Lepus_californicus_cont.tif\",                           package = \"bamm\") model <- raster::raster(model_path) # Convert model to sparse sparse_mod <- bamm::model2sparse(model = model) # Compute adjacency matrix adj_mod <- bamm::adj_mat(sparse_mod,ngbs=1)  # Initial points to start dispersal process  occs_lep_cal <- data.frame(longitude = c(-115.10417,                                          -104.90417),                            latitude = c(29.61846,                                         29.81846)) # Convert to sparse the initial points occs_sparse <- bamm::occs2sparse(modelsparse = sparse_mod,                                 occs = occs_lep_cal)  # Run the bam (sdm) simultation for 100 time steps smd_lep_cal <- bamm::sdm_sim(set_A = sparse_mod,                             set_M = adj_mod,                             initial_points = occs_sparse,                             nsteps = 10) #---------------------------------------------------------------------------- # Predict species' distribution under suitability change # scenarios (could be climate chage scenarios). #----------------------------------------------------------------------------  # Read suitability layers (two suitability change scenarios) layers_path <- system.file(\"extdata/suit_change\",                            package = \"bamm\") niche_mods_stack <- raster::stack(list.files(layers_path,                                              pattern = \".tif$\",                                              full.names = TRUE)) > 0.1 raster::plot(niche_mods_stack) # Predict new_preds <- predict(object = smd_lep_cal,                      niche_layers = niche_mods_stack,                      nsteps_vec = c(50,100))  # Generate the dispersal animation for time period 1 and 2 new_preds <- predict(object = smd_lep_cal,                      niche_layers = niche_mods_stack,                      nsteps_vec = c(10,10),                      animate=TRUE,                      filename=\"/home/l916o895/Desktop/animacion_01.html\",                      fmt=\"HTML\") }"},{"path":"/reference/sdm_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"sdm_sim: Simulate single species dispersal dynamics using the BAM framework. — sdm_sim","title":"sdm_sim: Simulate single species dispersal dynamics using the BAM framework. — sdm_sim","text":"sdm_sim: Simulate single species dispersal dynamics using BAM framework.","code":""},{"path":"/reference/sdm_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sdm_sim: Simulate single species dispersal dynamics using the BAM framework. — sdm_sim","text":"","code":"sdm_sim(   set_A,   set_M,   initial_points,   nsteps,   stochastic_dispersal = TRUE,   disp_prop2_suitability = TRUE,   disper_prop = 0.5,   progress_bar = TRUE )"},{"path":"/reference/sdm_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sdm_sim: Simulate single species dispersal dynamics using the BAM framework. — sdm_sim","text":"set_A setA object returned function model2sparse set_M setM object containing adjacency matrix study area. See adj_mat initial_points sparse vector returned function occs2sparse nsteps Number steps run simulation stochastic_dispersal Logical. dispersal depends probability visiting neighbor cells (Moore neighborhood). disp_prop2_suitability Logical. probability dispersal proportional suitability reachable cells. proportional value must declared parameter `disper_prop`. disper_prop Probability dispersal reachable cells. progress_bar Show progress bar","code":""},{"path":"/reference/sdm_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sdm_sim: Simulate single species dispersal dynamics using the BAM framework. — sdm_sim","text":"","code":"if (FALSE) { model_path <- system.file(\"extdata/Lepus_californicus_cont.tif\",                           package = \"bamm\") model <- raster::raster(model_path)  sparse_mod <- bamm::model2sparse(model,threshold=0.05) adj_mod <- bamm::adj_mat(sparse_mod,ngbs=1) occs_lep_cal <- data.frame(longitude = c(-110.08880,                                          -98.89638),                            latitude = c(30.43455,                                         25.19919))  occs_sparse <- bamm::occs2sparse(modelsparse = sparse_mod,                                 occs = occs_lep_cal) sdm_lep_cal <- bamm::sdm_sim(set_A = sparse_mod,                             set_M = adj_mod,                             initial_points = occs_sparse,                             nsteps = 10,                             stochastic_dispersal = TRUE,                             disp_prop2_suitability=TRUE,                             disper_prop=0.5,                             progress_bar=TRUE) }"},{"path":"/reference/setA.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for the A set of the BAM diagram — setA-class","title":"Class for the A set of the BAM diagram — setA-class","text":"class set BAM diagram. contains raster models IDs pixels values different NA.","code":""},{"path":"/reference/setA.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class for the A set of the BAM diagram — setA-class","text":"niche_model niche model raster format. can binary model continuous. model continuous format. suit_threshold Suitability value used binarize continuous model cellIDs numeric vector IDs cells prediction values suit_values numeric vector suitability value continuous map sparse_model niche model sparse matrix format","code":""},{"path":"/reference/setA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class for the A set of the BAM diagram — setA-class","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/setM-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for the M set of the bamm diagram — setM-class","title":"Class for the M set of the bamm diagram — setM-class","text":"Class M set bamm diagram","code":""},{"path":"/reference/setM-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class for the M set of the bamm diagram — setM-class","text":"adj_matix adjacency matrix adj_list adjacency list initial_points presence-absence vector species' occurrences n_initial_points Number initial points used start dispersal process ngbs Number neighbors","code":""},{"path":"/reference/setM-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class for the M set of the bamm diagram — setM-class","text":"Luis Osorio-Olvera & Jorge Soberón","code":""},{"path":"/reference/setM-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the M set of the bamm diagram — setM-class","text":"","code":"showClass(\"setM\") #> Class \"setM\" [package \"bamm\"] #>  #> Slots: #>                                                                    #> Name:      adj_matrix       adj_list initial_points           ngbs #> Class:      dgCMatrix           list      dgCMatrix        numeric #>                                                     #> Name:     coordinates      eigen_vec      eigen_val #> Class:         matrix         matrix        numeric #>  #> Extends: \"g_area\" #>  #> Known Subclasses: \"bam\""},{"path":"/reference/shape2Grid.html","id":null,"dir":"Reference","previous_headings":"","what":"shape2Grid: Function to create a grid given a spatial polygon — shape2Grid","title":"shape2Grid: Function to create a grid given a spatial polygon — shape2Grid","text":"shape2Grid creates raster grid given spatial polygon grid resolution.","code":""},{"path":"/reference/shape2Grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shape2Grid: Function to create a grid given a spatial polygon — shape2Grid","text":"","code":"shape2Grid(shpolygon, resolution, ones = TRUE)"},{"path":"/reference/shape2Grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shape2Grid: Function to create a grid given a spatial polygon — shape2Grid","text":"shpolygon SpatialPolygon, SpatialPolygonDataFrame representing desired shape grid. resolution Numeric. Spatial resolution grid. ones Logical. Fill ones values raster. values written cellID values.","code":""},{"path":"/reference/shape2Grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"shape2Grid: Function to create a grid given a spatial polygon — shape2Grid","text":"Returns raster object shape 'shpolygon' given  resolution.","code":""},{"path":"/reference/shape2Grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"shape2Grid: Function to create a grid given a spatial polygon — shape2Grid","text":"","code":"if (FALSE) { x_coord <- c(16.48438,  17.49512,  24.74609, 22.59277, 16.48438) y_coord <- c(59.736328125, 55.1220703125, 55.0341796875, 61.142578125,              59.736328125) xy <- cbind(x_coord, y_coord) p <- sp::Polygon(xy) ps <- sp::Polygons(list(p),1) sps <- sp::SpatialPolygons(list(ps)) r1 <- bamm::shape2Grid(sps,resolution = 0.5,ones = T) }"},{"path":"/reference/show.html","id":null,"dir":"Reference","previous_headings":"","what":"Show information in setA class bamm. — show,setA-method","title":"Show information in setA class bamm. — show,setA-method","text":"Show information setA class bamm. Show information csd class bamm. Show information pam class bamm. Show information pam class bamm. Show information setA class bamm. Show information diversity_range class bamm.","code":""},{"path":"/reference/show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show information in setA class bamm. — show,setA-method","text":"","code":"# S4 method for setA show(object)  # S4 method for csd show(object)  # S4 method for pam show(object)  # S4 method for bioindex_sparse show(object)  # S4 method for setM show(object)  # S4 method for diversity_range show(object)"},{"path":"/reference/show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show information in setA class bamm. — show,setA-method","text":"object object class diversity_range","code":""},{"path":"/reference/sim2Animation.html","id":null,"dir":"Reference","previous_headings":"","what":"sim2Animation: Animate BAM simulation object. — sim2Animation","title":"sim2Animation: Animate BAM simulation object. — sim2Animation","text":"Animates BAM simulation object.","code":""},{"path":"/reference/sim2Animation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sim2Animation: Animate BAM simulation object. — sim2Animation","text":"","code":"sim2Animation(   sdm_simul,   which_steps,   fmt = \"GIF\",   filename,   png_keyword = \"sdm_sim\",   extra_legend = NULL,   bg_color = \"#F6F2E5\",   suit_color = \"#0076BE\",   occupied_color = \"#03C33F\",   gif_vel = 0.8,   ani.width = 1200,   ani.height = 1200,   ani.res = 300 )"},{"path":"/reference/sim2Animation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sim2Animation: Animate BAM simulation object. — sim2Animation","text":"sdm_simul bam object. See sdm_sim which_steps numeric vector indicating simulation steps going converted raster layers. fmt Animation format. Possible values GIF HTML filename File name. png_keyword keyword name png images generated function extra_legend legend  add animation. bg_color Color unsuitable pixels. Default \"#F6F2E5\". suit_color Color suitable pixels. Default \"#0076BE\". occupied_color Color occupied pixels. Default \"#03C33F\". gif_vel value regulates velocity frame transitions. bigger transition slower default 0.8 ani.width Animation width unit px ani.height Animation height unit px ani.res Animation resolution unit px","code":""},{"path":"/reference/sim2Animation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sim2Animation: Animate BAM simulation object. — sim2Animation","text":"RasterStack species' distribution simulation step","code":""},{"path":"/reference/sim2Animation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sim2Animation: Animate BAM simulation object. — sim2Animation","text":"","code":"if (FALSE) { model_path <- system.file(\"extdata/Lepus_californicus_cont.tif\",                           package = \"bamm\") model <- raster::raster(model_path) sparse_mod <- bamm::model2sparse(model,0.1) adj_mod <- bamm::adj_mat(sparse_mod,ngbs=2) occs_lep_cal <- data.frame(longitude = c(-115.10417,                                          -104.90417),                            latitude = c(29.61846,                                         29.81846)) occs_sparse <- bamm::occs2sparse(modelsparse = sparse_mod,                                 occs = occs_lep_cal) sdm_lep_cal <- bamm::sdm_sim(set_A = sparse_mod,                             set_M = adj_mod,                             initial_points = occs_sparse,                             nsteps = 50) ani_name <- \"C:/Users/l916o895/Dropbox/TeoriadeBAM/ani_test.html\" sdm_lep_cal_st <- bamm::sim2Animation(sdm_simul = sdm_lep_cal,                                      which_steps = seq(1,50,by=1),                                      fmt = \"HTML\",ani.width = 1200,                                      ani.height = 1200,                                      filename = ani_name) }"},{"path":"/reference/sim2Raster.html","id":null,"dir":"Reference","previous_headings":"","what":"sim2Raster: Convert a BAM simulation object to RasterStack — sim2Raster","title":"sim2Raster: Convert a BAM simulation object to RasterStack — sim2Raster","text":"Convert BAM simulation object RasterStack.","code":""},{"path":"/reference/sim2Raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sim2Raster: Convert a BAM simulation object to RasterStack — sim2Raster","text":"","code":"sim2Raster(sdm_simul, which_steps = NULL)"},{"path":"/reference/sim2Raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sim2Raster: Convert a BAM simulation object to RasterStack — sim2Raster","text":"sdm_simul bam object. See sdm_sim which_steps numeric vector indicating simulation steps going converted raster layers.","code":""},{"path":"/reference/sim2Raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sim2Raster: Convert a BAM simulation object to RasterStack — sim2Raster","text":"RasterStack species' distribution simulation step","code":""},{"path":"/reference/sim2Raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sim2Raster: Convert a BAM simulation object to RasterStack — sim2Raster","text":"","code":"if (FALSE) { model_path <- system.file(\"extdata/Lepus_californicus_cont.tif\",                           package = \"bamm\") model <- raster::raster(model_path) sparse_mod <- bamm::model2sparse(model) adj_mod <- bamm::adj_mat(sparse_mod,ngbs = 1) occs_lep_cal <- data.frame(longitude = c(-115.10417,                                          -104.90417),                            latitude = c(29.61846,                                         29.81846)) occs_sparse <- bamm::occs2sparse(modelsparse = sparse_mod,                                 occs = occs_lep_cal) sdm_lep_cal <- bamm::sdm_sim(set_A = sparse_mod,                             set_M = adj_mod,                             initial_points = occs_sparse,                             nsteps = 100) sdm_lep_cal_st <- bamm::sim2Raster(sdm_simul = sdm_lep_cal,                                   which_steps = seq(1,100,by=5)) }"},{"path":"/news/index.html","id":"bamm-0426","dir":"Changelog","previous_headings":"","what":"bamm 0.4.2.6","title":"bamm 0.4.2.6","text":"Added NEWS.md file track changes package. Tested : R-hub windows-x86_64-devel (r-devel) R-hub macOS 10.13.6 High Sierra, R-release, CRAN setup windows-latest (release; GitHub Actions), R 4.2.2 macOS-latest (release; GitHub Actions), R 4.2.2 ubuntu-latest (release; GitHub Actions), R 4.2.2 ubuntu-latest (devel; GitHub Actions), R 4.2.2 ubuntu-latest (older-1; GitHub Actions), R 4.2.2 local ubuntu 20.04.5, install, R 4.1.2 local OS X 12.4 install, R 4.2.2 Package website build using pkgdown: https://luismurao.github.io/bamm","code":""}]
